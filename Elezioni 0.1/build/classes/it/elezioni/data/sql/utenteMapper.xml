<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="it.elezioni.data.dao.UtenteDao">

	<resultMap id="utenteMap" type="it.elezioni.data.model.Utente">
        <id property="idUtente" column="id_utente"/>
        <result property="nome" column="nome"/>
        <result property="cognome" column="cognome"/>
        <result property="attivo" column="attivo"/>
        <result property="isAdmin" column="is_admin"/>
        <result property="account" column="account"/>    
        <result property="password" column="password"/>     
    </resultMap>
    
    <resultMap id="utenteViewActionMap" type="it.elezioni.data.model.Utente">
        <id property="idUtente" column="id_utente"/>
        <result property="idElezione" column="id_elezione"/>
        <result property="voto" column="ha_votato"/>
        <result property="nrVoti" column="nr_voti"/>   
    </resultMap>
    
    <select id="selectUtenteById" resultMap="utenteMap">
            SELECT *
            FROM Utente
            WHERE id_utente = #{idUtente}
    </select>
    
    <select id="selectAllUtente" resultMap="utenteMap">
            SELECT *
            FROM Utente
            WHERE is_admin = false
            ORDER BY id_utente DESC;
    </select>
    
    <select id="utentiMaiCandidati" resultMap="utenteMap">
    	SELECT * FROM utente WHERE id_utente NOT IN (SELECT id_utente FROM candidatura ) AND is_admin=false
    </select>
    
    
    <select id="selectUtenteByName" resultMap="utenteMap">
            SELECT *
            FROM Utente
			<where>
			   <include refid="whereSql" />
			</where>          
            ORDER BY id_utente DESC;
    </select>
    
    <sql id="whereSql" >
    	is_admin = false
        <if test="nome != null ">
                AND lower(nome) LIKE lower('%' || #{nome} || '%')
        </if>
        <if test="cognome != null ">
                AND lower(cognome) LIKE lower('%' || #{cognome} || '%')
        </if>
    </sql>
    
    
    <select id="selectUtenteForLogin" resultMap="utenteMap">
    		SELECT id_utente, 
    		       is_admin, 
    		       attivo,
    		       nome,
    		       cognome
			FROM Utente
			WHERE account = #{account}
			AND password = #{password}
    </select>
    
    <insert id="insertUtente" useGeneratedKeys="true" keyProperty="idUtente" parameterType="it.elezioni.data.model.Utente">
        <![CDATA[	
        	INSERT INTO utente (
                    nome,
                    cognome,
                    account,
                    password
             ) VALUES (
                    #{nome},
                    #{cognome},
                    #{account},
                    #{password}
            )
        ]]>
    </insert>
    
    <update id="updateUtente" parameterType="it.elezioni.data.model.Utente" >
        UPDATE Utente
        SET
            nome = #{nome}
            cognome = #{cognome},
            attivo = #{attivo},
            is_admin =  #{isAdmin},
            account =  #{account},
            password =  #{password}
        WHERE
            id_utente = #{idUtente}
    </update>

	<delete id="delete" parameterType="java.lang.Integer" >
   		DELETE FROM Utente
   		WHERE  id_utente = #{idUtente}
	</delete>
	
	 <update id="updateStatoUtente"  >
        UPDATE Utente 
        SET            
            attivo = #{stato}
        WHERE
            id_utente = #{idUtente}
    </update>
    
    <select id="elencoCandidatiByIdElezione" resultMap="utenteMap">
            SELECT 
				u.id_utente,
				u.nome,
				u.cognome				
            FROM 
            	Utente u
            WHERE u.id_utente IN (
            	SELECT 
            		c.id_utente 
            	FROM
            		Candidatura c
            	WHERE 
            		c.id_elezione = #{idElezione}             
            ) 
    </select>
    
    <select id="controlloUtenteGiaCandidato" parameterType="Utente" resultMap="utenteViewActionMap">
     <![CDATA[
		SELECT 
			t1.id_utente,
           	t1.id_elezione,
           	t1.ha_votato,
           	t1.nr_voti
		FROM
			(SELECT id_utente,
		       id_elezione,
		       ha_votato ,
		       NULL AS nr_voti
			FROM votazione
			WHERE id_utente = #{idUtente}
			  UNION
			SELECT id_utente,
			       id_elezione ,
			       NULL AS ha_votato,
			       nr_voti 
			FROM candidatura
			WHERE id_utente = #{idUtente}
			) as t1
		
			WHERE t1.id_elezione IN (
			--elezione in corso : dalla data di creazione (fase candidati) alla data_fine-1 (ultimo giorno per votare)
	        	SELECT e.id_elezione
			  	FROM   elezione e
			  	WHERE  data_fine > current_date 
			  	AND data_crea <= current_date
			) 
			
			AND id_utente = #{idUtente};
		]]>
    </select>
    
    <select id="selectAzioniUtenteById" resultMap="utenteViewActionMap">
    	<![CDATA[
            SELECT 
            	t1.id_utente,
		        t1.id_elezione,
		        t1.ha_votato,
		        t1.nr_voti
			FROM
				(SELECT id_utente,
			       id_elezione,
			       ha_votato ,
			       NULL AS nr_voti
				FROM votazione
				WHERE id_utente = #{idUtente}
				  UNION
				SELECT id_utente,
				       id_elezione ,
				       NULL AS ha_votato,
				       nr_voti 
				FROM candidatura
				WHERE id_utente = #{idUtente}
				) as t1
		]]>
		<where>
		   <include refid="whereSqlAzioni" />
		</where>
		
    </select>
    
    <sql id="whereSqlAzioni" >
        <if test="type == 'PerCandidarsi' ">
	        <![CDATA[
                t1.id_elezione IN (
                	SELECT e.id_elezione
				  	FROM   elezione e
				  	WHERE  data_ini > current_date 
				  	AND data_crea <= current_date
				)
			]]>
        </if>
        <if test="type == 'PerVotare' ">
	        <![CDATA[	             
	             t1.id_elezione IN (
	             	SELECT e.id_elezione
				 	FROM   elezione e
				  	WHERE  data_fine > current_date 
				  	AND data_ini <= current_date
				 )
			]]>
        </if>
    </sql>
    
</mapper>