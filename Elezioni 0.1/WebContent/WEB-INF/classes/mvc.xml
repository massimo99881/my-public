<?xml version="1.0" encoding="UTF-8"?>
<beans   default-lazy-init="true" xmlns="http://www.springframework.org/schema/beans"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xmlns:context="http://www.springframework.org/schema/context"
         xmlns:mvc="http://www.springframework.org/schema/mvc"
         xmlns:tx="http://www.springframework.org/schema/tx"
         xmlns:aop="http://www.springframework.org/schema/aop"
         xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx.xsd
	   		http://www.springframework.org/schema/context
	   		http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/mvc 
			http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
                        http://www.springframework.org/schema/aop
                        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="warnLogCategory" value="it.unimi.webapp.exception"/>
        <property name="exceptionMappings">
            <props>
                <prop key="it.elezioni.common.exception.GenericException">
                    GenericExceptionPage
                </prop>
                <prop key="java.lang.Exception">includes/genericerror</prop>
            </props>
        </property>
    </bean>
    
    <context:annotation-config />
    
    <!-- Scans within the base package of the application for @Components to 
		configure as beans -->
	<!-- @Controller, @Service, @Configuration, etc. -->
    <context:component-scan base-package="it.elezioni">
        <context:include-filter type="regex" expression="it.elezioni.controller.interfaces.*Controller" />
        <context:include-filter type="regex" expression="it.elezioni.controller.impl.*ControllerImpl" />
        <context:include-filter type="regex" expression="it.elezioni.service.*ServiceImpl" />
        <context:include-filter type="regex" expression="it.elezioni.configuration.*" />
    </context:component-scan>
    
    <!-- Enables the Spring MVC @Controller programming model -->
    <mvc:annotation-driven/>
    
    <!-- Handles GET requests for /resources/** by efficiently serving static content in the ${webappRoot}/resources dir -->
	<mvc:resources mapping="/css/**" location="/css/" />
    <mvc:resources mapping="/images/**" location="/images/" />
    <mvc:resources mapping="/js/**" location="/js/" />
        
    <mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
				<property name="paramName" value="lang" />
			</bean>
		</mvc:interceptor>
	</mvc:interceptors>
	
	<!-- - i18n configurations - basename : path to properties - fallbackToSystemLocale 
		: will use messages.properties if no one found requested locale -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="classpath:messages/messages" />
		<property name="fallbackToSystemLocale" value="false" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>

	<!-- i18n configurations: which i18n resolver we want use CookieLocaleResolver 
		or SessionLocaleResolver -->
	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
		<!-- <property name="defaultLocale" value="it"/> -->
	</bean>
	

</beans>
